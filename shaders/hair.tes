#version 410 corelayout(triangles, equal_spacing, ccw) in;in vec3 tcNormals[];out vec3 teNormal;void main(){        teNormal = gl_TessCoord.x * tcNormals[0]             + gl_TessCoord.y * tcNormals[1]             + gl_TessCoord.z * tcNormals[2];           vec4 p0 = gl_TessCoord.x * gl_in[0].gl_Position; // Barycentric!    vec4 p1 = gl_TessCoord.y * gl_in[1].gl_Position;    vec4 p2 = gl_TessCoord.z * gl_in[2].gl_Position;    gl_Position = (p0 +p1 + p2); // Sum with weights from the barycentric coords any way we like    // Apply vertex transformation here if we want}